{
  /**
   ** ---- Settings Sync ----
   **/
  "settingsSync.ignoredExtensions": ["ms-vscode-remote.remote-wsl", "golang.go"],
  "settingsSync.ignoredSettings": [
    "terminal.integrated.fontFamily",
    "editor.fontFamily",
    "editor.fontSize"
  ],
  /**
   ** ---- General Editor Settings ----
   **/
  "css.validate": false,
  "workbench.tree.indent": 12,
  "workbench.settings.editor": "json",
  "workbench.settings.useSplitJSON": false,
  "workbench.editor.showTabs": true,
  "workbench.list.automaticKeyboardNavigation": false,
  "workbench.activityBar.visible": true,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.colorCustomizations": {
    "terminal.background": "#131314",
    "terminalCursor.background": "#282a36",
    "terminalCursor.foreground": "#97979b",
    "terminal.selectionBackground": "#97979b33",
    "terminal.foreground": "#eff0eb",
    // "terminal.ansiBlack": "#282a36",
    "terminal.ansiRed": "#ff5c57",
    "terminal.ansiGreen": "#5af78e",
    "terminal.ansiYellow": "#ff800a",
    "terminal.ansiBlue": "#0084ff",
    "terminal.ansiMagenta": "#ff6ac1",
    "terminal.ansiCyan": "#9aedfe",
    "terminal.ansiWhite": "#f1f1f0",
    "terminal.ansiBrightBlack": "#686868",
    "terminal.ansiBrightRed": "#ff5c57",
    "terminal.ansiBrightGreen": "#5af78e",
    "terminal.ansiBrightYellow": "#f3f99d",
    "terminal.ansiBrightBlue": "#57c7ff",
    "terminal.ansiBrightMagenta": "#ff6ac1",
    "terminal.ansiBrightCyan": "#9aedfe",
    "terminal.ansiBrightWhite": "#eff0eb",
    // "editor.selectionHighlightBackground": "#0054b467",
    // "editor.findMatchHighlightBackground": "#0077ff42",
    "editor.findMatchBorder": "#09a5d47a",
    // "editor.findMatchHighlightBorder": "#ffffff00",
    // "editor.selectionHighlightBorder": "#ffffff00",
    // "editor.lineHighlightBorder": "#272727",
    // "editor.selectionBackground": "#5281a1e7",
    // "editor.wordHighlightBackground": "#771835",
    "editorCursor.foreground": "#00c3ff",
    "editor.lineHighlightBackground": "#181818",
    "editor.findMatchBackground": "#1150997e",
    "editorInlayHint.background": "#2a2a2e",
    "editorInlayHint.foreground": "#8e9191",
    "statusBar.debuggingBackground": "#410d18",
    "statusBar.debuggingForeground": "#dddddd",
    "tab.activeBorder": "#00c3ff",
    "[One Dark Pro]": {
      "editor.background": "#1e2127",
      "tab.activeBorder": "#00c3ff"
    },
    "[Atom One Dark]": {
      "editor.background": "#1e2127"
    },
    "[One Monokai]": {
      "editor.background": "#141414",
      "editor.lineHighlightBackground": "#101113"
    },
    "[Monokai Pro (Filter Ristretto)]": {
      "editor.background": "#1f1c19",
      "editorGutter.background": "#1f1c19"
    }
  },
  "editor.fontSize": 12,
  "editor.tabSize": 2,
  "editor.detectIndentation": false,
  "editor.fontLigatures": true,
  "editor.cursorStyle": "line",
  "editor.insertSpaces": true,
  "editor.lineNumbers": "on",
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",
  // "editor.fontFamily": "'Dank Mono'",
  // "editor.fontFamily": "'Rec Mono Linear', Monaco, 'Courier New', monospace",
  // "editor.fontFamily": "'Rec Mono DuoTone', Monaco, 'Courier New', monospace",
  // "editor.fontFamily": "'Rec Mono SemiCasual', Monaco, 'Courier New', monospace",
  // "editor.fontFamily": "'Cascadia Code', Consolas, 'Courier New', monospace",
  "editor.fontFamily": "'MonoLisa', Consolas, 'Courier New', monospace",
  // "editor.fontFamily": "'Fira Code Retina', Consolas, 'Courier New', monospace",
  "editor.formatOnSave": false,
  "editor.rulers": [120],
  "editor.minimap.enabled": false,
  "editor.codeLens": true,
  "editor.suggestSelection": "first",
  "editor.renderLineHighlight": "all",
  "editor.semanticHighlighting.enabled": "configuredByTheme",
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.hover.above": false,
  "editor.cursorSmoothCaretAnimation": true,
  "editor.smoothScrolling": true,
  "editor.accessibilitySupport": "off",
  "editor.largeFileOptimizations": false,
  "oneDarkPro.italic": false,
  "editor.tokenColorCustomizations": {
    "[Horizon Extended]": {
      "textMateRules": [
        {
          "name": "No italics",
          "scope": [
            "comment",
            "markup.quote",
            "variable.language",
            "variable.parameter",
            "keyword.operator"
          ],
          "settings": {
            "fontStyle": ""
          }
        }
      ]
    },
    // "[One Dark Pro]": {
    //   "textMateRules": [
    //     {
    //       "name": "italic font",
    //       "scope": [
    //         // "comment",
    //         "storage.type",
    //         "keyword.control.loop",
    //         "keyword.control.conditional",
    //         "keyword.control.switch",
    //         "keyword.operator.new",
    //         "keyword.control.import",
    //         "keyword.control.export",
    //         "meta.attribute.python"
    //         // "keyword.control.from",
    //       ],
    //       "settings": {
    //         "fontStyle": "italic"
    //       }
    //     }
    //   ]
    // },
    "[Monokai Pro (Filter Ristretto)]": {
      "comments": "#6A9955"
    }
  },
  "git.closeDiffOnOperation": true,
  "importSorter.generalConfiguration.sortOnBeforeSave": false,
  "importSorter.importStringConfiguration.maximumNumberOfImportExpressionsPerLine.type": "newLineEachExpressionAfterCountLimitExceptIfOnlyOne",
  "importSorter.importStringConfiguration.maximumNumberOfImportExpressionsPerLine.count": 100,
  "importSorter.importStringConfiguration.tabSize": 2,
  "importSorter.importStringConfiguration.quoteMark": "single",
  "importSorter.sortConfiguration.removeUnusedImports": true,
  "importSorter.sortConfiguration.removeUnusedDefaultImports": true,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": true,
  "gitlens.views.repositories.includeWorkingTree": true,
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "material-icon-theme.folders.associations": {
    "actions": "Redux-actions",
    "reducers": "Redux-reducer"
  },
  "files.associations": {
    "*.gpl": "cpp",
    "*.rmd": "markdown",
    "*.Rmd": "rmd"
  },
  "oneDarkPro.vivid": true,
  "eslint.alwaysShowStatus": true,
  // "terminal.integrated.profiles.linux": {
  //   "zsh": {
  //     "path": "/usr/bin/zsh"
  //   }
  // },
  "terminal.integrated.profiles.osx": {
    "zsh": {
      "path": "/bin/zsh"
    }
  },
  "terminal.integrated.profiles.windows": {
    "pwsh": {
      "path": "C:\\Program Files\\PowerShell\\7\\pwsh.exe"
    }
  },
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.defaultProfile.windows": "pwsh",
  // "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.external.osxExec": "iterm2",
  "terminal.integrated.fontFamily": "Hack Nerd Font",
  "terminal.integrated.fontSize": 13,
  "vsicons.dontShowNewVersionMessage": true,
  "[csharp]": {
    // "editor.defaultFormatter": "ms-dotnettools.csharp",
    "editor.tabSize": 4
  },
  "csharp.semanticHighlighting.enabled": true,
  "omnisharp.enableEditorConfigSupport": true,
  // "omnisharp.enableRoslynAnalyzers": true,
  /**
   ** ---- Python Settings ----
   **/
  "[python]": {
    "editor.defaultFormatter": null,
    "editor.tabSize": 4
  },
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": true,
  "python.formatting.provider": "black",
  // "python.formatting.provider": "yapf",
  "python.formatting.yapfArgs": [
    "--style={based_on_style: google, indent_width: 4, column_limit: 100 }"
  ],
  // "python.linting.pylintArgs": ["--disable=C0111", "--max-line-length=120"],
  // "python.linting.pylintPath": "/usr/local/bin/pylint",
  "python.formatting.blackArgs": [
    "--line-length",
    "100",
    "--skip-string-normalization"
  ],
  "python.languageServer": "Pylance",
  /**
   ** ---- C/CPP Settings ----
   **/
  "C_Cpp.enhancedColorization": "Enabled",
  "C_Cpp.clang_format_style": "{BasedOnStyle: Google, UseTab: Never, IndentWidth: 2, TabWidth: 2, ColumnLimit: 0}",
  "C_Cpp.formatting": "clangFormat",
  "C_Cpp.default.intelliSenseMode": "gcc-x64",
  "code-runner.showExecutionMessage": false,
  "code-runner.clearPreviousOutput": true,
  /**
   ** ---- Javascript/Typescript Settings ----
   **/
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.suggest.completeFunctionCalls": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "[typescriptreact]": {
    "editor.tabSize": 2,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.tabSize": 2,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "prettier.singleQuote": true,
  /**
   ** ---- Better Comments tag colors ----
   **/
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "backgroundColor": "transparent"
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "backgroundColor": "transparent"
    },
    {
      "tag": "//",
      "color": "#81818181",
      "strikethrough": true,
      "backgroundColor": "transparent"
    },
    {
      "tag": "todo",
      "color": "#FF8C00",
      "strikethrough": false,
      "backgroundColor": "transparent"
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "backgroundColor": "transparent"
    }
  ],
  /**
   ** ---- Vim/Neovim Settings ----
   **/
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.searchHighlightColor": "#006effa8",
  "vim.visualstar": true,
  // Plugins
  "vim.sneak": true,
  "vim.surround": true,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 300,
  "vim.debug.loggingLevelForConsole": "verbose",
  // Keys/Keybindings
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false
  },
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    },
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.navigateDown"]
    },
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.navigateLeft"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.navigateUp"]
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.navigateRight"]
    },
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    {
      "before": ["<tab>"],
      "commands": [":tabnext"]
    },
    {
      "before": ["<S-tab>"],
      "commands": [":tabprev"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    },
    {
      "before": ["p"],
      "after": ["p", "g", "v", "y"]
    }
  ],
  "vim.operatorPendingModeKeyBindings": [
    {
      "before": ["L"],
      "after": ["$"]
    },
    {
      "before": ["H"],
      "after": ["^"]
    }
  ],
  /**
   ** ---- Go Settings
   **/
  "[go]": {
    // "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    }
  },
  // "go.formatTool": "goimports",
  // "go.formatTool": "gofmt",
  /**
   ** ---- Markdown Settings ----
   */
  "markdownlint.config": {
    "MD013": false,
    "MD033": false
  },
  "markdown.styles": [
    "https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
  ],
  "markdown.extension.math.enabled": false,
  "markdown-preview-enhanced.previewTheme": "atom-material.css",
  /**
   ** ---- LaTeX Settings ----
   **/
  "latex-workshop.latex.autoBuild.run": "onFileChange",
  "latex-workshop.view.pdf.viewer": "tab",
  "latex-workshop.latex.outDir": "out.nosync",
  "latex-workshop.latex.tools": [
    {
      "name": "latexmk",
      "command": "latexmk",
      "args": [
        "--shell-escape",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-pdf",
        "-outdir=%OUTDIR%",
        "%DOC%"
      ]
    },
    {
      "name": "pdflatex",
      "command": "pdflatex",
      "args": [
        "--shell-escape",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-output-directory=out.nosync",
        "-aux-directory=out.nosync",
        "%DOC%"
      ]
    },
    {
      "name": "bibtex",
      "command": "bibtex",
      "args": ["out.nosync/%DOCFILE%"]
    }
  ],
  "[latex]": {
    "editor.formatOnSave": false
  },
  // "settingsSync.ignoredSettings": [
  //   "vscode-neovim.neovimInitPath"
  // ],
  /**
   ** ---- Gitlens Settings ----
   **/
  "gitlens.mode.statusBar.alignment": "left",
  "gitlens.statusBar.alignment": "left",
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "details": false,
      "history": false,
      "remote": false
    },
    "editorGroup": false,
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true,
      "stashInline": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true,
      "stash": true
    }
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "cSpell.ignorePaths": [
    "package-lock.json",
    "node_modules",
    "vscode-extension",
    ".git/objects",
    ".vscode",
    ".vscode-insiders",
    ".gitlab-ci.yml",
    "www_config/application/logs/ikError.json"
  ],
  "cSpell.userWords": [
    "accnt",
    "appid",
    "APPPATH",
    "autologin",
    "Automationfnben",
    "Automationlnben",
    "avgt",
    "bakbtn",
    "bankfinder",
    "BASEPATH",
    "browserslist",
    "Btns",
    "buildin",
    "bulmaswatch",
    "canigetawitness",
    "cardnumber",
    "Chainable",
    "Checkmark",
    "COBRAND",
    "codeigniter",
    "codeignitor",
    "COOLDOWN",
    "craco",
    "Crosslist",
    "Csnumber",
    "Csnumbers",
    "CURLOPT",
    "CUSTOMREQUEST",
    "datadog",
    "datatables",
    "datetime",
    "depts",
    "dios",
    "dispursement",
    "divs",
    "dmode",
    "Dont",
    "EMAILPATH",
    "empl",
    "endbtn",
    "endforeach",
    "esbuild",
    "Etlupdate",
    "fastlink",
    "FCPATH",
    "finapp",
    "firstname",
    "formik",
    "ggplot",
    "GLOBIGNORE",
    "gmail",
    "headlessui",
    "healthz",
    "HELPERPATH",
    "heroicons",
    "Highcharts",
    "HTMLPATH",
    "HTTPHEADER",
    "Hubspot",
    "iframe",
    "iframes",
    "IKCD",
    "ikdios",
    "ikform",
    "ikint",
    "iklog",
    "ikrest",
    "ikvh",
    "ikvw",
    "Ikyodlee",
    "Infof",
    "Investorkeep",
    "Ionicons",
    "iphone",
    "isselected",
    "iterrows",
    "Jslog",
    "JSPATH",
    "lastname",
    "lastrowid",
    "lxml",
    "mailgun",
    "Marden",
    "maxdate",
    "Michaels",
    "mindate",
    "Mixpanel",
    "mutex",
    "mutualfund",
    "noaa",
    "noresult",
    "Notif",
    "nxtbtn",
    "otplib",
    "pagehandler",
    "pers",
    "persistor",
    "pivottable",
    "PKCE",
    "ponyfill",
    "popperjs",
    "POSTFIELDS",
    "qauser",
    "reauth",
    "Recaptcha",
    "reduxjs",
    "registerables",
    "relevent",
    "RETI",
    "RETURNTRANSFER",
    "Scrollable",
    "sectionfont",
    "semibold",
    "sess",
    "slugified",
    "Soprets",
    "SQLEXPRESS",
    "stod",
    "stretchr",
    "subroutes",
    "Swipeable",
    "tailwindcss",
    "TCBK",
    "tellem",
    "threadp",
    "THREADPOOL",
    "totp",
    "trico",
    "Twilio",
    "UNCONF",
    "unsecure",
    "unsub",
    "untrack",
    "Vals",
    "vtext",
    "wasm",
    "webp",
    "Wistia",
    "WSMS",
    "WTUs",
    "Ynab",
    "Yodlee",
    "youtube",
    "zombify"
  ],
  /* ---- which key settings ---- */
  "whichkey.sortOrder": "alphabetically",
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "m",
      "name": "minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    // {
    //   "key": "n",
    //   "name": "highlight",
    //   "type": "command",
    //   "command": "vscode-neovim.send",
    //   "args": ":noh<CR>"
    // },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        }
      ]
    },
    {
      "key": "T",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "prettier.trailingComma": "none",
  "prettier.printWidth": 100,
  "git.autofetch": true,
  "go.toolsManagement.autoUpdate": true,
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter.notebook.ipynb"
  },
  "workbench.productIconTheme": "fluent-icons",
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "gitlens.hovers.pullRequests.enabled": false,
  "gitlens.hovers.currentLine.details": false,
  "gitlens.hovers.currentLine.changes": false,
  "terminal.integrated.tabs.enabled": true,
  "gitlens.codeLens.enabled": false,
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "cSpell.enableFiletypes": ["!jsonc", "shellscript"],
  "security.workspace.trust.untrustedFiles": "open",
  "remote.SSH.remotePlatform": {
    "ben.dev.ikint.io": "linux"
  },
  "php-cs-fixer.executablePath": "${extensionPath}/php-cs-fixer.phar",
  "php-cs-fixer.lastDownload": 1647887045321,
  "git.confirmSync": false,
  "gitlens.hovers.enabled": false,
  "thunder-client.codeSnippetLanguage": "js-axios",
  "diffEditor.ignoreTrimWhitespace": false,
  "gitlens.advanced.fileHistoryFollowsRenames": true,
  "svg.preview.mode": "svg",
  "workbench.editor.pinnedTabSizing": "shrink",
  "workbench.colorTheme": "One Dark Pro",
  "redhat.telemetry.enabled": false,
  "files.autoSave": "afterDelay"
}
